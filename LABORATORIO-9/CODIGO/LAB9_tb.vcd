$date
	Fri Oct 30 19:29:49 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! Q4 [3:0] $end
$var wire 2 " Q2 [1:0] $end
$var wire 1 # Q1 $end
$var reg 1 $ D1 $end
$var reg 2 % D2 [1:0] $end
$var reg 4 & D4 [3:0] $end
$var reg 1 ' clk $end
$var reg 1 ( enable1 $end
$var reg 1 ) enable2 $end
$var reg 1 * enable4 $end
$var reg 1 + reset1 $end
$var reg 1 , reset2 $end
$var reg 1 - reset4 $end
$scope module U1 $end
$var wire 1 $ D $end
$var wire 1 ' clk $end
$var wire 1 ( enable $end
$var wire 1 + reset $end
$var reg 1 # Q $end
$upscope $end
$scope module U2 $end
$var wire 2 . D [1:0] $end
$var wire 1 ' clk $end
$var wire 1 ) enable $end
$var wire 1 , reset $end
$var wire 2 / Q [1:0] $end
$scope module U1 $end
$var wire 1 0 D $end
$var wire 1 ' clk $end
$var wire 1 ) enable $end
$var wire 1 , reset $end
$var reg 1 1 Q $end
$upscope $end
$scope module U2 $end
$var wire 1 2 D $end
$var wire 1 ' clk $end
$var wire 1 ) enable $end
$var wire 1 , reset $end
$var reg 1 3 Q $end
$upscope $end
$upscope $end
$scope module U3 $end
$var wire 4 4 D [3:0] $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var wire 4 5 Q [3:0] $end
$scope module U1 $end
$var wire 2 6 D [1:0] $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var wire 2 7 Q [1:0] $end
$scope module U1 $end
$var wire 1 8 D $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var reg 1 9 Q $end
$upscope $end
$scope module U2 $end
$var wire 1 : D $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var reg 1 ; Q $end
$upscope $end
$upscope $end
$scope module U2 $end
$var wire 2 < D [1:0] $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var wire 2 = Q [1:0] $end
$scope module U1 $end
$var wire 1 > D $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var reg 1 ? Q $end
$upscope $end
$scope module U2 $end
$var wire 1 @ D $end
$var wire 1 ' clk $end
$var wire 1 * enable $end
$var wire 1 - reset $end
$var reg 1 A Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0A
0@
0?
0>
b0 =
b0 <
0;
0:
09
08
b0 7
b0 6
b0 5
b0 4
03
02
01
00
b0 /
b0 .
1-
1,
1+
1*
1)
1(
1'
b0 &
b0 %
0$
0#
b0 "
b0 !
$end
#1
0'
#2
1'
#3
0'
0+
1$
#4
1#
1'
#5
0'
0$
#6
0#
1'
#7
0'
1$
0(
#8
1'
#9
0'
#10
1'
#11
0'
0$
#12
1'
#13
0'
1(
1$
#14
1#
1'
#15
0#
0'
1+
#16
1'
#17
0'
#18
1'
#19
0'
#20
b1 "
b1 /
11
1'
10
0,
b1 %
b1 .
#21
0'
#22
b11 "
b11 /
13
1'
12
b11 %
b11 .
#23
0'
#24
1'
00
b10 %
b10 .
0)
#25
0'
#26
1'
02
b0 %
b0 .
#27
0'
#28
1'
10
12
b11 %
b11 .
#29
0'
#30
b1 "
b1 /
03
1'
02
b1 %
b1 .
1)
#31
0'
#32
b11 "
b11 /
13
1'
12
b11 %
b11 .
#33
0'
#34
01
b0 "
b0 /
03
1'
1,
#35
0'
#36
b1 =
1?
b101 !
b101 5
b1 7
19
1'
18
1>
b1 6
b1 <
0-
b101 &
b101 4
#37
0'
#38
b0 7
09
b1100 !
b1100 5
b11 =
1A
1'
08
1@
b0 6
b11 <
b1100 &
b1100 4
#39
0'
#40
1'
0>
b10 <
b1000 &
b1000 4
0*
#41
0'
#42
1'
#43
0'
#44
1'
0@
b0 <
b0 &
b0 4
#45
0'
#46
b1 7
19
b1001 !
b1001 5
b10 =
0?
1'
18
1@
b1 6
b10 <
b1001 &
b1001 4
1*
#47
0'
#48
b11 =
1?
b1111 !
b1111 5
b11 7
1;
1'
1:
1>
b11 6
b11 <
b1111 &
b1111 4
#49
0'
#50
1'
